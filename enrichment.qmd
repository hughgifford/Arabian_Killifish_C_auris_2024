# Enrichment

```{r}
# Load dataset
df_genes
df_features
strain <- "I"

# Define enrichment function
enrichment <- function(strain){

  # Select subset of genes for that comparison of clade and timepoint
  df_genes_subset <- df_genes %>% 
    filter(Strain==strain)
  
  # Count Hybrids within this subset
  df_totals <- df_genes_subset %>% group_by(Hybrid) %>% summarise(Number=n()) %>% column_to_rownames(var="Hybrid")

  # Add zero rows if not present
  if(!"Yes" %in% row.names(df_totals)) {df_totals <- rbind(df_totals, Up = c(Number = 0))}
  if(!"No" %in% row.names(df_totals)) {df_totals <- rbind(df_totals, No = c(Number = 0))}
  
  # Produce named variables
  Total_yes <- as.numeric(df_totals["Yes","Number"])
  Total_no <- as.numeric(df_totals["No","Number"])
  Total <- Total_yes+Total_no
  
  # Join with feature list 
  df_genes_features <- left_join(df_genes_subset,df_features_input,by="Locus_id") %>% 
    mutate(Feature=ifelse(is.na(Feature),"No Feature",Feature)) %>% 
    distinct()
  
  # GROUP FEATURES BY DEG
  table_genes_features <- df_genes_features %>% 
    group_by(Feature,Hybrid) %>% summarise(Number=n()) %>% 
    pivot_wider(names_from = Hybrid,values_from = Number,values_fill = list(Number=0)) %>% 
    distinct() %>% # Just in case duplication - not an issue at the moment
    filter(Feature!="No Feature") # Remove the No Feature column
  # Add zero to columns if not present
  if(!"Yes" %in% colnames(table_genes_features)) {table_genes_features <- table_genes_features %>%add_column(Up = 0)}
  if(!"No" %in% colnames(table_genes_features)) {table_genes_features <- table_genes_features %>%add_column(No = 0)}
  
  # Tabulate
  table_hybrids <- table_genes_features %>% #filter(Feature!="No Feature") %>% 
    mutate(Hybrid_with_feature=Yes,
           Non_hybrid_with_feature=No,
           Hybrid_without_feature=Total-Yes,
           Non_hybrid_without_feature=Total-No) %>% 
    column_to_rownames(var="Feature") %>% filter(Up!=0) %>% select(-c(Yes,No)) #%>% t()
  
  # Check gene totals
  table_hybrids %>% mutate(total=Hybrid_with_feature+Non_hybrid_with_feature+Hybrid_without_feature+Non_hybrid_without_feature) %>% 
    distinct(total) #%>% nrow()
  
  # FISHER'S EXACT
  # Function
  contingency <- function(df,feature){
    t <- matrix(c(as.numeric(df[1,feature]),
                  as.numeric(df[2,feature]),
                  as.numeric(df[3,feature]),
                  as.numeric(df[4,feature])),nrow=2)
    test <- fisher.test(t)
    return(test$p.value)
  }
  
  # Fisher's test and Bonferonni set
  matrix_hybrids <- t(table_hybrids)
  features_hybrids <- colnames(matrix_hybrids)
  p_values_hybrids <- sapply(features_hybrids, contingency, df = matrix_hybrids)
  p_values_hybrids <- data.frame(p_values_hybrids) %>% mutate(Set="Yes") %>% 
    mutate(P_value=p_values_hybrids) %>% 
    select(Set,P_value) %>% rownames_to_column(var="Feature")
  
  # Apply Bonferroni here
  #bonferoni_threshold_up <- 0.05/(nrow(p_values_up))
  #p_values_up <- p_values_up %>% filter(P_value<=bonferoni_threshold_up)
  # Apply BH
  p_values_hybrids$FDR <- p.adjust(p_values_hybrids$P_value, method = "BH" )
  p_values_hybrids <-  p_values_hybrids %>% filter(FDR<=0.001) 
  
  return(p_values_hybrids)
}

x <- rbind(enrichment("I"),enrichment("II"),enrichment("II"))

x %>% ggplot(aes(x=P_value,y=Feature,fill=Strain)) + geom_point()
```


```{r A-dispar-Enrichment-sham}
# Enrichment Testing on Sham Injection
# Select only Sham DEGs
df_degs_input <- ak_logfc %>% filter(Category=="Inject Controls")
# Count number of DEGs
df_degs_input %>%  filter(DEG!="No") %>% select(Locus_id) %>% unique() %>% nrow()
100*(30/27481)
# Prep Features Input
df_features <- read_tsv("data/A_dispar_annotations.tsv") %>%  mutate(Feature=paste(Go_term,Description))#rename(Feature=Go_term)
# List Gene Names
list_gene_names <- df_features %>% select(Locus_id) %>% distinct()
# Prepare Features to Locus id lookup table
df_features_input <- df_features %>% select(Locus_id,Feature)
# Perform enrichment testing
x_sham <- rbind(enrichment("24h","Water vs None"),
                enrichment("48h","Water vs None"))
# Only 4 terms enriched, all with same logFC, implying a driver.
# Get a list of the GO terms
x_features <- x_sham %>% select(Feature)
x_enriched_genes <- df_degs_input %>% filter(DEG=="Up") %>% left_join(.,df_features_input,by="Locus_id") %>% unique() %>% filter(Feature %in% x_features$Feature) %>% select(Locus_id) %>% unique()
ak_descriptions %>% filter(Locus_id %in% x_enriched_genes$Locus_id)
```
```{r A-dispar-Enrichment-Infection}
# Enrich Infection
df_degs_input <- ak_logfc %>% filter(Category=="Infection vs Sham Controls")
x <- rbind(enrichment("24h","I vs Water"),
           enrichment("24h","II vs Water"),
           enrichment("24h","III vs Water"),
           enrichment("24h","IV vs Water"),
           enrichment("24h","V vs Water"),
           enrichment("48h","I vs Water"),
           enrichment("48h","II vs Water"),
           enrichment("48h","III vs Water"),
           enrichment("48h","IV vs Water"),
           enrichment("48h","V vs Water"))

x_better0 <- x %>%
  mutate(Term=ifelse(grepl("^GO",Feature),"GO",
              ifelse(grepl("^K",Feature),"KEGG",
              ifelse(grepl("^PF",Feature),"PFAM","Other")))) %>% 
  mutate(Clade=gsub(" vs ","\nvs\n",Clade))
require(ggsci)

revigo_lookup <- read_tsv("data/A_dispar_REVIGO.txt")
revigo_remove <- read_tsv("data/A_dispar_REVIGO_remove.txt")

go_remove <- x_better0 %>% 
  filter(!Feature %in% revigo_remove$Feature) %>% 
  left_join(.,revigo_lookup,by="Feature") %>% 
  mutate(Term=ifelse(grepl("^G",Feature),GO_category,Term))

hotdot1 <- go_remove %>% 
  mutate(Comparison=gsub(" vs Water","",Comparison)) %>% 
  ggplot(aes(x=Mean_LogFC,y=fct_reorder(Feature,-Mean_LogFC),colour=Comparison,size=Ratio,alpha = FDR,shape=Clade)) + geom_point() + theme_minimal(base_size = 8) +
  scale_y_discrete(limits=rev
                   ) +  
  scale_alpha_continuous(trans = "reverse") + 
  facet_grid(rows=vars(Term),scale="free_y",space="free_y",switch = "y")+
  theme(strip.placement = "outside") +
  scale_colour_nejm()
hotdot1
```
