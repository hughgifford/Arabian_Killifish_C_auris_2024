# Figure 7

```{r}
table_vir <- read_xlsx("data/C_auris_DEGS_virulence_info.xlsx")

table_vir_mod <- table_vir %>% 
  mutate(Set=paste(Set,Comparison)) %>% 
  group_by(Set,Category) %>% summarise(Number=n()) %>% 
  mutate(NegativeNumber=ifelse(grepl("Down",Set),-Number,Number)) %>% 
  mutate(Timing=ifelse(grepl("24",Set),
                       ifelse(grepl("48h",Set),"Both\n24h & 48h","24h\nonly"),"48h\nonly")) 
table_vir_mod$Timing <- factor(table_vir_mod$Timing,levels=c("24h\nonly","Both\n24h & 48h","48h\nonly"))

# Change colours
table_vir_mod$Category <- factor(table_vir_mod$Category,levels=
                                   c("Cell cycle","Cell wall","Intracellular transport",
                                     "Metabolism","Secreted hydrolase","Transcription/translation","Transmembrane transport","Uncharacterised","Other"))

lancet <- scale_fill_manual(values=c("#00468BFF","#ED0000FF","#42B540FF","#0099B4FF","#925E9FFF", "#FDAF91FF","#AD002AFF","#ADB6B6FF","#1B1919FF"))
                            
plot <- table_vir_mod %>%   
  ggplot(aes(x=Timing,y=NegativeNumber,fill=Category,label=Number)) +geom_bar(stat="identity") + theme_minimal() + scale_fill_manual(values=c("#ED0000FF","#42B540FF","#0099B4FF", "#FDAF91FF","#AD002AFF","#ADB6B6FF","#1B1919FF")) +   geom_hline(yintercept = 0,    # Add horizontal line at y=0
             color = "black",   # Set line color to black
             size = 0.5) +
  geom_text(position = position_stack(vjust = 0.5),size=2) +
  labs(title = "Clade I or IV vs II or III",x="Timepoint",y="Number of DEGs")
plot
```
```{r Virulence-Volcano,fig.height=10,fig.width=20}
virulent <- c("I vs II","I vs III","IV vs II","IV vs III")
df_degs_vir <- read_tsv("data/C_auris_DEGS_interclades_Locus_id.tsv") %>% # Load the DEG raw data
  filter(Clade %in% virulent) %>% 
  mutate(`-1log10(FDR)`=-1*log10(FDR)) 

list_degs_vir_only <-  df_degs_vir %>% filter(DEG!="No") %>% select(Locus_id) %>% unique()

df_degs_vir_mean <- df_degs_vir %>% 
  filter(Comparison!="ypd") %>% # AKF only
  filter(Locus_id %in% list_degs_vir_only$Locus_id) %>% # Only DEGs
  group_by(Locus_id,Comparison) %>% # Tabulate
  summarise(Mean_LogFC=mean(Log_FC),
            Mean_minus_log10_FDF=mean(`-1log10(FDR)`)) # Mean values for these logFC/FDR

# Add the category and name information from my spreadsheet of ALL
lookup_gene_id <- table_vir %>% 
  mutate(Gene_id=str_replace_all(Gene_id,"\\*","")) %>% # Remove italic markdown
  mutate(Locus_id=str_replace(Gene_id,".*_","B9J08_00")) %>% # Restore names to join
  select(Locus_id,Gene_id,Category) # Retain categories


# Add names
df_degs_vir_mean_named <- left_join(df_degs_vir_mean,df_cgd_names_modified,by="Locus_id") %>% 
  left_join(.,lookup_gene_id,by="Locus_id") %>% # Add categories and names
  mutate(New_name=ifelse(!is.na(Gene_id),Gene_id,CGD_name)) %>% 
  mutate(Category=ifelse(!is.na(Category),Category,"Z_not_in_all")) %>% 
  mutate(New_name=ifelse(!is.na(New_name),New_name,Locus_id))

# Plot these as two plots with colour
plot <- df_degs_vir_mean_named %>% 
  ggplot(aes(x=Mean_LogFC,y=Mean_minus_log10_FDF,label=New_name,colour=Category)) + geom_point() +
  theme_minimal() + scale_colour_manual(values=c("#ED0000FF","#42B540FF","#0099B4FF", "#FDAF91FF","#AD002AFF","#ADB6B6FF","#1B1919FF")) + geom_text_repel(cex=2,max.overlaps = 20) + 
  facet_grid(~Comparison)
plot
```






```{r Filamentation-Bar}
# Retrieve the DEGs for all clade comparisons
filamenting <- c("V vs I","V vs II","V vs III","V vs IV") # Choose the filament relevant comparisons
df_degs_fil <- read_tsv("data/C_auris_DEGS_interclades_Locus_id.tsv") %>% # Load the DEG raw data
  filter(Clade %in% filamenting) %>% 
  mutate(`-1log10(FDR)`=-1*log10(FDR))

# Now simply ask which Locus IDs are UP in all in YPD
df_degs_ypd <- df_degs_fil %>% # Last DF
  select(Clade,Comparison,Locus_id,DEG) %>% # Select only the genes that are relevant
  filter(DEG!="No") %>% # Filter only Up/Down DEGs and not Non-DEGs
  filter(Comparison=="ypd") # Choose only those in the YPD condition

# Tabulate these DEGs 
tbl_degs_ypd <- df_degs_ypd %>% # Found in YPD only
  mutate(Locus_id_DEG=paste(Locus_id,DEG)) %>% # Create unique ID to address all sets
  select(Clade,Locus_id_DEG) %>% # Choose only these two columns for tabulation
  mutate(Present=1) %>% # Prepare for pivot wider
  pivot_wider(names_from = Clade, # Pivot wider with clades as columns
              values_from = Present, # Use 1 to fill matrix
              values_fill = list(Present=0)) %>% # Fill missing values with zero
  column_to_rownames(var="Locus_id_DEG") %>% # Move unique ID to rownames to enable...
  mutate(Total = rowSums(across(everything()))) # Summary number to find DEGs across all

# Lookup the DEGs and whether up or down
df_degs_ypd_all <- tbl_degs_ypd %>% # From last table
  filter(Total==4) %>% # Select only the Locus_ids (with Up/Down) across all comparisons
  rownames_to_column(var="Locus_id_DEG") %>% # Reinstate column
  separate("Locus_id_DEG", # Take unique identifier
           into = c("Locus_id", "DEG"), # Re-form Locus_id and DEG information
           sep = " ") %>% # Use the space sparator from "pase" above
  select(Locus_id,DEG) %>%  # Select relevant columns only
  mutate(YPD="Yes")

# Retrieve the 84 genes that I have previously been studying
table_fil <- read_csv("data/C_auris_DEGS_filamentous_info.csv")

# Remove genes that aren't relevant
tbl_fil <- table_fil %>% rename(Locus_id=`*C. auris* Locus ID`) %>% # Ensure consistent naming
  mutate(DEG=word(Set, 1)) %>% 
  left_join(.,df_degs_ypd_all,by=c("Locus_id","DEG")) %>% 
  mutate(across(everything(), ~replace_na(., "No")))

tbl_fil_not_YPD <- tbl_fil %>% filter(YPD=="No")

# REPEAT
table_fil_mod <- tbl_fil_not_YPD %>% group_by(Set,Category) %>% summarise(Number=n()) %>% 
  mutate(NegativeNumber=ifelse(grepl("Down",Set),-Number,Number)) %>% 
  mutate(Timing=ifelse(grepl("24h",Set),
                       ifelse(grepl("48h",Set),"Both\n24h & 48h","24h\nonly"),"48h\nonly")) 
table_fil_mod$Timing <- factor(table_fil_mod$Timing,levels=c("24h\nonly","Both\n24h & 48h","48h\nonly"))

plot <- table_fil_mod %>%   
  ggplot(aes(x=Timing,y=NegativeNumber,fill=Category,label=Number)) +geom_bar(stat="identity") + theme_minimal() + scale_fill_lancet() +   geom_hline(yintercept = 0,    # Add horizontal line at y=0
             color = "black",   # Set line color to black
             size = 0.5) +
  geom_text(position = position_stack(vjust = 0.5),size=2) +
  labs(title = "Clade V vs I-IV in AKF",x="Timepoint",y="Number of DEGs")
plot
```

```{r Filamentation-Volcanoes,fig.height=10,fig.width=20}
df_degs_filamenting_mean <- df_degs_fil %>% 
  filter(Clade %in% filamenting) %>% 
  filter(Comparison!="ypd") %>% 
  group_by(Locus_id,Comparison) %>% 
  summarise(Mean_LogFC=mean(Log_FC),Mean_minus_log10_FDF=mean(`-1log10(FDR)`))

lookup_fil_all_cat <- table_fil %>% mutate(Locus_id=`*C. auris* Locus ID`) 

df_degs_filamenting_mean_named <- df_degs_filamenting_mean %>% 
  left_join(.,df_cgd_names_modified,by="Locus_id") %>% 
  left_join(.,lookup_fil_all_cat,by="Locus_id") %>% 
  mutate(across(everything(), ~ replace_na(.x, "Z_Not_in_all"))) 

lst_fil_not_YPD <- tbl_fil_not_YPD %>% select(Locus_id)

x <- df_degs_filamenting_mean_named %>% 
  mutate(Colour = ifelse(Locus_id %in% lst_fil_not_YPD$Locus_id,
                         Category,"Z_not_in_all"))

plot <- x %>% 
  mutate(Colour_names_only=ifelse(Colour!="Z_not_in_all",CGD_name,NA)) %>% 
  ggplot(aes(x=Mean_LogFC,y=Mean_minus_log10_FDF,label=Colour_names_only,colour=Colour)) + geom_point() +
  theme_minimal() + geom_text_repel(cex=2,max.overlaps = 100) +
  facet_grid(~Comparison) + scale_colour_lancet()
plot

plot <- x %>% 
  ggplot(aes(x=Mean_LogFC,y=Mean_minus_log10_FDF,label=CGD_name,colour=Colour)) + geom_point(alpha=0.5) +
  theme_minimal() + geom_text_repel(cex=2,max.overlaps = 10) +
  facet_grid(~Comparison) + scale_colour_lancet()
plot
```

# Supp. Fig. 6-7: *C. auris* Mating-Type Locus Gene Expression and Comparing individual transcript levels for each orthogroup in filamentous clade V 

```{r MTL-data}
# Load Clade-specific FPKM files - all reference genomes
df_fpkm_raw <- read_tsv("data/C_auris_FPKM_five_references.tsv",col_names = F)
colnames(df_fpkm_raw) <- c("Experiment","Reference_genome","Locus_id","FPKM")
df_fpkm <- df_fpkm_raw %>% separate(Experiment,into=c("Clade","Condition","Replicate"),sep="_",remove = F) 
# Select only clade specific reference genome
df_fpkm_specific <- df_fpkm %>% filter(!(Reference_genome == "B8441" & Clade != "I"))
# Select only clade I as reference genome
df_fpkm_b8441 <- df_fpkm %>% filter(Reference_genome == "B8441")
# Check numbers of genes
#df_fpkm_specific %>% group_by(Clade,Reference_genome) %>% summarise(Number=n()) %>% mutate(Genes=Number/9)
#df_fpkm_specific %>% group_by(Clade) %>% summarise(Mean=mean(FPKM))

# Load gff3 files at genes of interest
df_gff_raw <- read_tsv("data/C_auris_five_clade_summary.gff3",col_names = F) %>% select(X1,X2,X5,X6,X8,X10,X11)
colnames(df_gff_raw) <- c("Reference","Contig","Start","Stop","Strand","Locus_id","Gene_id")
df_gff <- df_gff_raw %>% separate(Reference,into=c("Clade","Reference_genome"),sep = "_",remove = T) %>% 
  mutate(Locus_id=gsub(";.*","",Locus_id)) %>% 
  mutate(Gene_number=as.numeric(gsub(".*_","",Locus_id)))
## Note SCF1 gene in cluster 0004466: B9J08_001458, CJI96_0001187, CJI97_001146, CJJ09_003711, FDK38_003638
## ERG11 in 0002529: B9J08_001448, CJI96_0001197, CJI97_001156, CJJ09_003699, FDK38_003627
# Select genes 2 above or below
df_gff_mtl_broad <- df_gff %>% 
  filter(Clade=="I" & between(Gene_number,5589,5590) |
           Clade=="I" & between(Gene_number,1446,1460) |
           Clade=="II" & between(Gene_number,1185,1199) | 
           Clade=="III" & between(Gene_number,1144,1158) |
           Clade=="IV" & between(Gene_number,3697,3713) |
           Clade=="V" & between(Gene_number,3625,3640)) %>% 
  mutate(Level=1)
# Re-arrange with fewer genes - 3 above ERG11, 1 below SCF1
df_gff_mtl_narrow <- df_gff %>% 
  filter(Clade=="I" & between(Gene_number,5589,5590) |
           Clade=="I" & between(Gene_number,1451,1457) |
           Clade=="II" & between(Gene_number,1188,1194) | 
           Clade=="III" & between(Gene_number,1147,1153) |
           Clade=="IV" & between(Gene_number,3702,3710) |
           Clade=="V" & between(Gene_number,3630,3637)) %>% 
  mutate(Level=1)
# Reverse II and III locus
df_gff_mtl_I_IV_V <- df_gff_mtl_broad %>% filter(Clade!="II" & Clade !="III")
df_gff_mtl_II_III <- df_gff_mtl_broad %>% filter(Clade!="I" & Clade !="IV" & Clade !="V") %>% 
  mutate(Start=-Start) %>% mutate(Stop=-Stop)
df_mtl_broad <- rbind(df_gff_mtl_I_IV_V,df_gff_mtl_II_III)
df_gff_mtl_I_IV_V <- df_gff_mtl_narrow %>% filter(Clade!="II" & Clade !="III")
df_gff_mtl_II_III <- df_gff_mtl_narrow %>% filter(Clade!="I" & Clade !="IV" & Clade !="V") %>% 
  mutate(Start=-Start) %>% mutate(Stop=-Stop)
df_mtl_narrow <- rbind(df_gff_mtl_I_IV_V,df_gff_mtl_II_III)

# Bind and add orthogroups
df_orth <- read_tsv("data/orthofinder.GENE_CLUSTERS_SUMMARIES.clusters_and_uniques",col_names = F) %>% select(X1,X5)
colnames(df_orth) <- c("Cluster","Locus_id")
df_mtl_broad_plot <- df_mtl_broad %>% 
  left_join(.,df_orth,by="Locus_id") %>% 
  left_join(.,df_cgd_names_modified,by="Locus_id") 
df_mtl_narrow_plot <- df_mtl_narrow %>% 
  left_join(.,df_orth,by="Locus_id") %>% 
  left_join(.,df_cgd_names_modified,by="Locus_id") 

# Simple background graph
df_mtl_broad_plot %>% ggplot(aes(x=Start,xend=Stop,y=Level,yend=Level, colour=Cluster)) + geom_segment() + facet_wrap(~Clade,ncol=1,scales = "free_x") + theme_prism()+ theme(axis.text.x = element_blank(),axis.ticks.x = element_blank(),axis.line.x = element_blank()) +  theme(strip.placement = "outside")
```


```{r MTL-broad-view-ERG11-SCF1}
# Left join with CGD names, cluster identities, clade, condition, rep
df_mtl_fpkm_broad_plot <- df_fpkm_specific %>% select(-c(Clade,Reference_genome)) %>% left_join(.,df_mtl_broad_plot,by="Locus_id") %>% 
  filter(!is.na(Clade))

# An interesting graph because of ERG11 (green) and SCF1 (purple)
df_mtl_fpkm_broad_plot %>% mutate(Cluster=gsub("uniq_.*","Other",Cluster)) %>% ggplot(aes(x=Start,xend=Stop,y=FPKM,yend=FPKM, colour=Cluster)) + geom_segment() + facet_wrap(Condition~Clade,ncol=5,scales = "free_x") + theme_minimal()+ theme(axis.text.x = element_blank(),axis.ticks.x = element_blank(),axis.line.x = element_blank()) #+ scale_color_bmj()
```

```{r MTL-narrow-clade-specific}
df_mtl_fpkm_narrow_plot <- df_fpkm_specific %>% select(-c(Clade,Reference_genome)) %>% left_join(.,df_mtl_narrow_plot,by="Locus_id") %>% 
  filter(!is.na(Clade))

# Focus on MTL
name_cluster <- read_csv("data/mtl_cluster.txt")
name_cluster$Figure_name <- factor(name_cluster$Figure_name,levels=
  c("RMT2","MAS2","PAP1","OBPA","PIKA","HP","RCY1","MTLa1","Other"))
p1 <- df_mtl_fpkm_narrow_plot %>% mutate(Cluster=gsub("uniq_.*","Other",Cluster)) %>% 
  left_join(.,name_cluster,by="Cluster") %>% 
  ggplot(aes(x=Start,xend=Stop,y=FPKM,yend=FPKM, colour=Figure_name)) + geom_segment() + facet_wrap(Condition~Clade,ncol=5,scales = "free_x") + theme_minimal()+ theme(axis.text.x = element_blank(),axis.ticks.x = element_blank(),axis.line.x = element_blank()) + lims(y = c(0, 400)) +   #coord_cartesian(ylim = c(0, 300)) + 
  scale_color_bmj() + theme(legend.position = "bottom")
p1
# Same graph with B8441 only
```

```{r MTL-narrow-B8441}
df_mtl_fpkm_narrow_plot <- df_fpkm %>% select(-c(Clade,Reference_genome)) %>% left_join(.,df_mtl_narrow_plot,by="Locus_id") %>% 
  filter(!is.na(Clade))

df_mtl_fpkm_b8441 <- df_fpkm_b8441 %>% left_join(.,df_mtl_narrow_plot,by="Locus_id") %>% 
  filter(!is.na(Clade.y))
p2 <- df_mtl_fpkm_b8441 %>% mutate(Cluster=gsub("uniq_.*","Other",Cluster)) %>% 
  left_join(.,name_cluster,by="Cluster") %>% 
  ggplot(aes(x=Start,xend=Stop,y=FPKM,yend=FPKM, colour=Figure_name)) + geom_segment() + facet_wrap(Condition~Clade.x,ncol=5,scales = "free_x") + theme_minimal()+ theme(axis.text.x = element_blank(),axis.ticks.x = element_blank(),axis.line.x = element_blank()) + lims(y = c(0, 400)) +
  scale_color_bmj() + theme(legend.position = "bottom")

p2
```

```{r MTL-side-by-side,fig.height=6,fig.width=10}
p <- p2+p1
p
```


```{r Cluster-FPKM-Check}
# Get genes to check
check_cluster <- left_join(df_orth,df_cgd_names_modified,by="Locus_id") %>% filter(!is.na(CGD_name)) 
check_cluster$CGD_name[check_cluster$CGD_name=="RBT1_1458"] <- "SCF1_1458"
checklist <- read_csv("data/fpkm_checklist.txt") 
virulent <- checklist %>% filter(Set=="Virulent")
filament <- checklist %>% filter(Set=="Filament")
check_cluster_select_v <- check_cluster %>% left_join(virulent,by="CGD_name") %>% filter(!is.na(Set)) %>% select(-c(Locus_id))
check_cluster_select_f <- check_cluster %>% left_join(filament,by="CGD_name") %>% filter(!is.na(Set)) %>% select(-c(Locus_id))  # Exclude HPs

df_fpkm_specific_clusters_v <- left_join(df_fpkm_specific,df_orth,by="Locus_id") %>% 
  left_join(.,check_cluster_select_v,by="Cluster") %>% 
  filter(!is.na(Set))

df_fpkm_specific_clusters_v_in <- df_fpkm_specific_clusters_v %>% 
    mutate(Status=ifelse(Set=="Virulent" & (Clade=="I" | Clade =="IV"),"+",
                         ifelse(Set=="Virulent" & (Clade=="II" | Clade == "III"), "-",
                                ifelse(Set=="Filament" & Clade =="V","F","N")))) %>% 
    filter(Set=="Virulent") %>% filter(Clade!="V") 

df_fpkm_specific_clusters_f<- left_join(df_fpkm_specific,df_orth,by="Locus_id") %>% 
  left_join(.,check_cluster_select_f,by="Cluster") %>% 
  filter(!is.na(Set))%>% filter(!grepl("HP",CGD_name))

df_fpkm_specific_clusters_f_in <- df_fpkm_specific_clusters_f %>% 
    mutate(Status=ifelse(Set=="Virulent" & (Clade=="I" | Clade =="IV"),"Virulent",
                         ifelse(Set=="Virulent" & (Clade=="II" | Clade == "III"), "Less Virulent",
                                ifelse(Set=="Filament" & Clade =="V","+","-")))) %>% 
    filter(Set=="Filament")



# Function to make graph
make_graph_fpkm <- function(df_input,timepoint){

  df_fpkm_full_info_v <- df_input%>% filter(Condition==timepoint)
  
  # Stat compare means - works but not adjusted
  df_fpkm_full_info_v$Status <- as.factor(df_fpkm_full_info_v$Status)
  #df_fpkm_full_info_v %>% ggplot(aes(x=Status,y=FPKM,colour=Clade)) + geom_point() + theme_minimal() + scale_color_nejm() + facet_wrap(~CGD_name,drop = T,ncol=1,scales="free_y") +stat_compare_means(comparisons = list(c("More Virulent","Less Virulent")),method = "t.test", aes(label = "p.signif")) + coord_flip()
  
  # Calculate signif
  p_adj_signif <- function(df){
    df %>% mutate(`p.adj.signif`=ifelse(p.adj>=0.05,"ns",
                                        ifelse(p.adj>=0.01,"*",
                                               ifelse(p.adj>=0.001,"**",
                                                      ifelse(p.adj>=0.0001,"***",
                                                             ifelse(p.adj>=0.0001,"****","*****"))))))
  }
  
  # Compare means
  v_stat <- compare_means(data=df_fpkm_full_info_v,FPKM ~ Status,group.by = "CGD_name",p.adjust.method = "bonferroni") %>%  #mutate(y.position = max(v$FPKM, na.rm = TRUE) + 100) %>% 
    p_adj_signif()# Bonferroni
  
  y_positions <- df_fpkm_full_info_v %>%
    group_by(CGD_name) %>%
    summarize(max_FPKM = max(FPKM, na.rm = TRUE)) %>%
    mutate(y.position = max_FPKM + 150) 
  
  v_stat <- v_stat %>%
    left_join(y_positions, by = "CGD_name")  
  
  v_plot <- df_fpkm_full_info_v %>% ggplot(aes(x=Status,y=FPKM,colour=Clade)) + geom_boxplot(position = position_dodge(width = 0.9)) + geom_point(position = position_dodge(width = 0.9)) + theme_prism(base_size = 6) + scale_color_nejm() + facet_wrap(~CGD_name,drop = T,ncol=9,scales="free_y") + stat_pvalue_manual(v_stat,label = "p.adj.signif",size=2)
  v_plot
}

# https://genomebiology.biomedcentral.com/articles/10.1186/s13059-022-02648-4
# Minimise false positives
  
```


```{r fig.height=2,fig.width=10}
p <- make_graph_fpkm(df_fpkm_specific_clusters_v_in,"24h") + labs(title="Virulence at 24 HPI")
p
```

```{r fig.height=2,fig.width=10}
p <- make_graph_fpkm(df_fpkm_specific_clusters_v_in,"48h") + labs(title="Virulence at 48 HPI")
p
```

```{r fig.height=10,fig.width=10}
p <- make_graph_fpkm(df_fpkm_specific_clusters_f_in,"24h") + labs(title="Filamentation at 24 HPI")
p
```

```{r fig.height=10,fig.width=10}
p <- make_graph_fpkm(df_fpkm_specific_clusters_f_in,"48h") + labs(title="Filamentation at 48 HPI")
p
```

```{r fig.height=30,fig.width=7}
df_fpkm_specific_clusters <- left_join(df_fpkm_specific,df_orth,by="Locus_id") %>% 
  left_join(.,check_cluster_select_f,by="Cluster") %>% 
  filter(!is.na(Set))

df_fpkm_full_info_f <- df_fpkm_specific_clusters %>% 
  mutate(Status=ifelse(Set=="Virulent" & (Clade=="I" | Clade =="IV"),"More Virulent",
                ifelse(Set=="Virulent" & (Clade=="II" | Clade == "III"), "Less Virulent",
                ifelse(Set=="Filament" & Clade =="V","V","I-IV")))) %>% filter(Set=="Filament")  
#df_fpkm_full_info_f %>% ggplot(aes(x=Status,y=FPKM,colour=Clade)) + geom_point() + theme_minimal() + scale_color_nejm() + facet_wrap(~CGD_name,drop = T,ncol=1,scales="free_y") +stat_compare_means(comparisons = list(c("Filamentous","Afilamentous")),method = "t.test", aes(label = "p.signif")) + coord_flip()
```

```{r fig.height=10,fig.width=10}
# Remove HPs
df_fpkm_full_info_f_noHP <- df_fpkm_full_info_f %>% 
  filter(!grepl("HP",CGD_name))

f <- df_fpkm_full_info_f_noHP %>% filter(Set=="Filament") %>% filter(Condition=="48h") #%>% filter(CGD_name=="SCF1_1458") 
require(rstatix)
f_stat <- compare_means(data=f,FPKM ~ Status,group.by = "CGD_name",p.adjust.method = "bonferroni") #%>% p_adj_signif()#%>%  mutate(y.position = max(f$FPKM, na.rm = TRUE) + 100) # Bonferroni

y_positions <- df_fpkm_full_info_f_noHP %>%
  group_by(CGD_name) %>%
  summarize(max_FPKM = max(FPKM, na.rm = TRUE)) %>%
  mutate(y.position = max_FPKM + 100) 

f_stat <- f_stat %>%
  left_join(y_positions, by = "CGD_name")  

f_plot <- df_fpkm_full_info_f_noHP %>% ggplot(aes(x=Status,y=FPKM,colour=Clade))  + geom_boxplot(position = position_dodge(width = 0.9)) + geom_point(position = position_dodge(width = 0.9)) + theme_prism(base_size = 6) +
  scale_color_nejm() + facet_wrap(~CGD_name,ncol=7,scales="free") + stat_pvalue_manual(f_stat,label = "p.signif", #tip.length = 0.01, 
  #oord.flip = FALSE
  size = 2)#+ coord_flip()
f_plot
```

